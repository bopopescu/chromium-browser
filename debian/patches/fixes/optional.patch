description: Optional as of chromium 66 excludes copy construction from a type
author: Michael Gilbert <mgilbert@debian.org>

--- a/content/browser/appcache/appcache_request_handler.cc
+++ b/content/browser/appcache/appcache_request_handler.cc
@@ -639,7 +639,7 @@ AppCacheRequestHandler::MaybeCreateSubre
 
   SubresourceLoaderParams params;
   params.loader_factory_info = factory_ptr.PassInterface();
-  return params;
+  return std::move(params);
 }
 
 void AppCacheRequestHandler::MaybeCreateSubresourceLoader(
--- a/content/browser/service_worker/service_worker_controllee_request_handler.cc
+++ b/content/browser/service_worker/service_worker_controllee_request_handler.cc
@@ -271,7 +271,7 @@ ServiceWorkerControlleeRequestHandler::M
   controller_info->object_info = provider_host_->GetOrCreateServiceWorkerHandle(
       provider_host_->controller());
   params.controller_service_worker_info = std::move(controller_info);
-  return params;
+  return std::move(params);
 }
 
 void ServiceWorkerControlleeRequestHandler::PrepareForMainResource(
--- a/device/fido/device_response_converter.cc
+++ b/device/fido/device_response_converter.cc
@@ -121,7 +121,7 @@ base::Optional<AuthenticatorGetAssertion
     response.SetNumCredentials(it->second.GetUnsigned());
   }
 
-  return response;
+  return std::move(response);
 }
 
 base::Optional<AuthenticatorGetInfoResponse> ReadCTAPGetInfoResponse(
@@ -241,7 +241,7 @@ base::Optional<AuthenticatorGetInfoRespo
     response.SetPinProtocols(std::move(supported_pin_protocols));
   }
 
-  return response;
+  return std::move(response);
 }
 
 }  // namespace device
--- a/cc/raster/playback_image_provider.cc
+++ b/cc/raster/playback_image_provider.cc
@@ -70,7 +70,6 @@ PlaybackImageProvider::GetDecodedDrawIma
 }
 
 PlaybackImageProvider::Settings::Settings() = default;
-PlaybackImageProvider::Settings::Settings(const Settings& other) = default;
 PlaybackImageProvider::Settings::~Settings() = default;
 
 }  // namespace cc
--- a/cc/raster/playback_image_provider.h
+++ b/cc/raster/playback_image_provider.h
@@ -20,7 +20,6 @@ class CC_EXPORT PlaybackImageProvider :
  public:
   struct CC_EXPORT Settings {
     Settings();
-    Settings(const Settings& other);
     ~Settings();
 
     // The set of image ids to skip during raster.

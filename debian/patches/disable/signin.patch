description: disable browser sign-in
origin: https://raw.githubusercontent.com/Eloston/ungoogled-chromium/master/resources/patches/ungoogled-chromium/disable-signin.patch

--- a/components/signin/core/browser/signin_manager_base.cc
+++ b/components/signin/core/browser/signin_manager_base.cc
@@ -155,7 +155,7 @@ void SigninManagerBase::Initialize(PrefS
 bool SigninManagerBase::IsInitialized() const { return initialized_; }
 
 bool SigninManagerBase::IsSigninAllowed() const {
-  return client_->GetPrefs()->GetBoolean(prefs::kSigninAllowed);
+  return false;
 }
 
 AccountInfo SigninManagerBase::GetAuthenticatedAccountInfo() const {
--- a/chrome/browser/ui/chrome_pages.cc
+++ b/chrome/browser/ui/chrome_pages.cc
@@ -72,12 +72,6 @@ void OpenBookmarkManagerForNode(Browser*
   ShowSingletonTabOverwritingNTP(browser, std::move(params));
 }
 
-void NavigateToSingletonTab(Browser* browser, const GURL& url) {
-  NavigateParams params(GetSingletonTabNavigateParams(browser, url));
-  params.path_behavior = NavigateParams::IGNORE_AND_NAVIGATE;
-  ShowSingletonTabOverwritingNTP(browser, std::move(params));
-}
-
 // Shows either the help app or the appropriate help page for |source|. If
 // |browser| is NULL and the help page is used (vs the app), the help page is
 // shown in the last active browser. If there is no such browser, a new browser
@@ -383,6 +377,7 @@ void ShowSearchEngineSettings(Browser* b
 #if !defined(OS_ANDROID)
 void ShowBrowserSignin(Browser* browser,
                        signin_metrics::AccessPoint access_point) {
+#if 0
   Profile* original_profile = browser->profile()->GetOriginalProfile();
   SigninManagerBase* manager =
       SigninManagerFactory::GetForProfile(original_profile);
@@ -434,6 +429,7 @@ void ShowBrowserSignin(Browser* browser,
                                                   access_point);
 #endif
   }
+#endif
 }
 
 void ShowBrowserSigninOrSettings(Browser* browser,
--- a/chrome/browser/ui/BUILD.gn
+++ b/chrome/browser/ui/BUILD.gn
@@ -1790,11 +1790,6 @@ jumbo_split_static_library("ui") {
       "startup/default_browser_infobar_delegate.h",
       "startup/default_browser_prompt.cc",
       "startup/default_browser_prompt.h",
-      "sync/one_click_signin_links_delegate.h",
-      "sync/one_click_signin_links_delegate_impl.cc",
-      "sync/one_click_signin_links_delegate_impl.h",
-      "sync/one_click_signin_sync_observer.cc",
-      "sync/one_click_signin_sync_observer.h",
       "sync/one_click_signin_sync_starter.cc",
       "sync/one_click_signin_sync_starter.h",
       "user_manager.cc",
@@ -2994,8 +2989,6 @@ jumbo_split_static_library("ui") {
         "views/relaunch_notification/relaunch_required_dialog_view.cc",
         "views/relaunch_notification/relaunch_required_dialog_view.h",
         "views/screen_capture_notification_ui_views.cc",
-        "views/sync/one_click_signin_dialog_view.cc",
-        "views/sync/one_click_signin_dialog_view.h",
         "views/tabs/window_finder.cc",
       ]
     }
--- a/chrome/browser/ui/sync/one_click_signin_sync_starter.cc
+++ b/chrome/browser/ui/sync/one_click_signin_sync_starter.cc
@@ -395,20 +395,6 @@ void OneClickSigninSyncStarter::CancelSi
 }
 
 void OneClickSigninSyncStarter::ConfirmAndSignin() {
-  SigninManager* signin = SigninManagerFactory::GetForProfile(profile_);
-  if (confirmation_required_ == CONFIRM_UNTRUSTED_SIGNIN) {
-    browser_ = EnsureBrowser(browser_, profile_);
-    base::RecordAction(
-        base::UserMetricsAction("Signin_Show_UntrustedSigninPrompt"));
-    // Display a confirmation dialog to the user.
-    browser_->window()->ShowOneClickSigninConfirmation(
-        base::UTF8ToUTF16(signin->GetUsernameForAuthInProgress()),
-        base::Bind(&OneClickSigninSyncStarter::UntrustedSigninConfirmed,
-                   weak_pointer_factory_.GetWeakPtr()));
-  } else {
-    // No confirmation required - just sign in the user.
-    signin->CompletePendingSignin();
-  }
 }
 
 void OneClickSigninSyncStarter::UntrustedSigninConfirmed(

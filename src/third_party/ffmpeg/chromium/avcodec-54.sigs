# Copyright (c) 2011 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
#
# Functions from avcodec used in chromium code.

AVCodecContext *avcodec_alloc_context3(AVCodec *codec);
AVCodec *avcodec_find_decoder(enum CodecID id);
AVFrame *avcodec_alloc_frame(void);
int av_new_packet(AVPacket *pkt, int size);
int avcodec_decode_audio4(AVCodecContext *avctx, AVFrame *frame, int *got_frame_ptr, const AVPacket *avpkt);
int avcodec_decode_video2(AVCodecContext *avctx, AVFrame *picture, int *got_picture_ptr, const AVPacket *avpkt);
int avcodec_open2(AVCodecContext *avctx, AVCodec *codec, AVDictionary **options);
int avcodec_close(AVCodecContext *avctx);
void av_free_packet(AVPacket *pkt);
void av_init_packet(AVPacket *pkt);
int av_dup_packet(AVPacket *pkt);
void avcodec_flush_buffers(AVCodecContext *avctx);
void av_register_bitstream_filter(AVBitStreamFilter *bsf);
AVBitStreamFilterContext *av_bitstream_filter_init(const char *name);
int av_bitstream_filter_filter(AVBitStreamFilterContext *bsfc, AVCodecContext *avctx, const char *args, uint8_t **poutbuf, int *poutbuf_size, const uint8_t *buf, int buf_size, int keyframe);
void av_bitstream_filter_close(AVBitStreamFilterContext *bsf);
void av_destruct_packet(AVPacket *pkt);
int av_lockmgr_register(AVLockMgrOperation cb);
void avcodec_get_frame_defaults(AVFrame *pic);
void avcodec_align_dimensions(AVCodecContext *s, int *width, int *height);

# RDFT functions.
RDFTContext *av_rdft_init(int nbits, enum RDFTransformType trans);
void av_rdft_calc(RDFTContext *s, FFTSample *data);
void av_rdft_end(RDFTContext *s);

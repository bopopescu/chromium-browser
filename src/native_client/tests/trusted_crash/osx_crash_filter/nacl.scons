# -*- python -*-
# Copyright 2012 The Native Client Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

Import('env')


# This tests an interface that is specific to Mac OS X and/or Mach and
# that is only implemented for x86-32.
if not env.Bit('host_mac') or not env.Bit('build_x86_32'):
  Return()

# These tests use nexes built by other tests. Nexes do not get staged in
# pexe mode, so only run this test in nonpexe mode.
if env.Bit('pnacl_generate_pexe'):
  Return()

if 'TRUSTED_ENV' not in env:
  Return()
trusted_env = env['TRUSTED_ENV']

runner = trusted_env.ComponentProgram(
    'crash_filter_test', ['crash_filter_test.c'],
    EXTRA_LIBS=['sel', 'sel_debug_dummy'])

untrusted_crash_nexe = env.File('${STAGING_DIR}/crash_test${PROGSUFFIX}')
trusted_crash_nexe = env.File('${STAGING_DIR}/crash_in_syscall${PROGSUFFIX}')
is_broken = not env.Bit('nacl_static_link')

test_suites = ['small_tests', 'exception_tests', 'nonpexe_tests']

node = env.CommandTest('mach_filter_untrusted_crash_test.out',
                       [runner, 'untrusted', untrusted_crash_nexe],
                       declares_exit_status=True)
env.AddNodeToTestSuite(node, test_suites,
                       'run_mach_filter_untrusted_crash_test',
                       is_broken=is_broken)

node = env.CommandTest('mach_filter_trusted_crash_test.out',
                       [runner, 'trusted', trusted_crash_nexe],
                       declares_exit_status=True)
env.AddNodeToTestSuite(node, test_suites,
                       'run_mach_filter_trusted_crash_test',
                       is_broken=is_broken)

node = env.CommandTest('mach_filter_early_trusted_crash_test.out',
                       [runner, 'early_trusted'], declares_exit_status=True)
env.AddNodeToTestSuite(node, test_suites,
                       'run_mach_filter_early_trusted_crash_test',
                       is_broken=is_broken)
